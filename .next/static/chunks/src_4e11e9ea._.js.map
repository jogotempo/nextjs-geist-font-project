{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/storage.ts"],"sourcesContent":["import { Transaction, Category } from '@/types/finance';\n\nconst STORAGE_KEYS = {\n  TRANSACTIONS: 'finance-transactions',\n  CATEGORIES: 'finance-categories',\n};\n\nexport const storage = {\n  // Transactions\n  getTransactions(): Transaction[] {\n    if (typeof window === 'undefined') return [];\n    const data = localStorage.getItem(STORAGE_KEYS.TRANSACTIONS);\n    return data ? JSON.parse(data) : [];\n  },\n\n  saveTransactions(transactions: Transaction[]): void {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.TRANSACTIONS, JSON.stringify(transactions));\n  },\n\n  addTransaction(transaction: Transaction): void {\n    const transactions = this.getTransactions();\n    transactions.unshift(transaction);\n    this.saveTransactions(transactions);\n  },\n\n  updateTransaction(id: string, updated: Partial<Transaction>): void {\n    const transactions = this.getTransactions();\n    const index = transactions.findIndex(t => t.id === id);\n    if (index !== -1) {\n      transactions[index] = { ...transactions[index], ...updated };\n      this.saveTransactions(transactions);\n    }\n  },\n\n  deleteTransaction(id: string): void {\n    const transactions = this.getTransactions();\n    const filtered = transactions.filter(t => t.id !== id);\n    this.saveTransactions(filtered);\n  },\n\n  // Categories\n  getCategories(): Category[] {\n    if (typeof window === 'undefined') return [];\n    const data = localStorage.getItem(STORAGE_KEYS.CATEGORIES);\n    return data ? JSON.parse(data) : this.getDefaultCategories();\n  },\n\n  saveCategories(categories: Category[]): void {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.CATEGORIES, JSON.stringify(categories));\n  },\n\n  getDefaultCategories(): Category[] {\n    return [\n      { id: '1', name: 'Salary', type: 'income', color: '#10b981' },\n      { id: '2', name: 'Freelance', type: 'income', color: '#3b82f6' },\n      { id: '3', name: 'Food', type: 'expense', color: '#ef4444' },\n      { id: '4', name: 'Transport', type: 'expense', color: '#f59e0b' },\n      { id: '5', name: 'Entertainment', type: 'expense', color: '#8b5cf6' },\n      { id: '6', name: 'Utilities', type: 'expense', color: '#06b6d4' },\n      { id: '7', name: 'Shopping', type: 'expense', color: '#ec4899' },\n      { id: '8', name: 'Healthcare', type: 'expense', color: '#84cc16' },\n    ];\n  }\n};\n"],"names":[],"mappings":";;;AAEA,MAAM,eAAe;IACnB,cAAc;IACd,YAAY;AACd;AAEO,MAAM,UAAU;IACrB,eAAe;IACf;QACE,uCAAmC;;QAAS;QAC5C,MAAM,OAAO,aAAa,OAAO,CAAC,aAAa,YAAY;QAC3D,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ,EAAE;IACrC;IAEA,kBAAiB,YAA2B;QAC1C,uCAAmC;;QAAM;QACzC,aAAa,OAAO,CAAC,aAAa,YAAY,EAAE,KAAK,SAAS,CAAC;IACjE;IAEA,gBAAe,WAAwB;QACrC,MAAM,eAAe,IAAI,CAAC,eAAe;QACzC,aAAa,OAAO,CAAC;QACrB,IAAI,CAAC,gBAAgB,CAAC;IACxB;IAEA,mBAAkB,EAAU,EAAE,OAA6B;QACzD,MAAM,eAAe,IAAI,CAAC,eAAe;QACzC,MAAM,QAAQ,aAAa,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACnD,IAAI,UAAU,CAAC,GAAG;YAChB,YAAY,CAAC,MAAM,GAAG;gBAAE,GAAG,YAAY,CAAC,MAAM;gBAAE,GAAG,OAAO;YAAC;YAC3D,IAAI,CAAC,gBAAgB,CAAC;QACxB;IACF;IAEA,mBAAkB,EAAU;QAC1B,MAAM,eAAe,IAAI,CAAC,eAAe;QACzC,MAAM,WAAW,aAAa,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACnD,IAAI,CAAC,gBAAgB,CAAC;IACxB;IAEA,aAAa;IACb;QACE,uCAAmC;;QAAS;QAC5C,MAAM,OAAO,aAAa,OAAO,CAAC,aAAa,UAAU;QACzD,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,oBAAoB;IAC5D;IAEA,gBAAe,UAAsB;QACnC,uCAAmC;;QAAM;QACzC,aAAa,OAAO,CAAC,aAAa,UAAU,EAAE,KAAK,SAAS,CAAC;IAC/D;IAEA;QACE,OAAO;YACL;gBAAE,IAAI;gBAAK,MAAM;gBAAU,MAAM;gBAAU,OAAO;YAAU;YAC5D;gBAAE,IAAI;gBAAK,MAAM;gBAAa,MAAM;gBAAU,OAAO;YAAU;YAC/D;gBAAE,IAAI;gBAAK,MAAM;gBAAQ,MAAM;gBAAW,OAAO;YAAU;YAC3D;gBAAE,IAAI;gBAAK,MAAM;gBAAa,MAAM;gBAAW,OAAO;YAAU;YAChE;gBAAE,IAAI;gBAAK,MAAM;gBAAiB,MAAM;gBAAW,OAAO;YAAU;YACpE;gBAAE,IAAI;gBAAK,MAAM;gBAAa,MAAM;gBAAW,OAAO;YAAU;YAChE;gBAAE,IAAI;gBAAK,MAAM;gBAAY,MAAM;gBAAW,OAAO;YAAU;YAC/D;gBAAE,IAAI;gBAAK,MAAM;gBAAc,MAAM;gBAAW,OAAO;YAAU;SAClE;IACH;AACF","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/calculations.ts"],"sourcesContent":["import { Transaction } from '@/types/finance';\n\nexport const calculateFinancialSummary = (transactions: Transaction[]) => {\n  const totalIncome = transactions\n    .filter(t => t.type === 'income')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const totalExpenses = transactions\n    .filter(t => t.type === 'expense')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const netProfit = totalIncome - totalExpenses;\n  const profitMargin = totalIncome > 0 ? (netProfit / totalIncome) * 100 : 0;\n\n  return {\n    totalIncome,\n    totalExpenses,\n    netProfit,\n    profitMargin\n  };\n};\n\nexport const filterTransactionsByDate = (\n  transactions: Transaction[],\n  startDate: Date,\n  endDate: Date\n) => {\n  return transactions.filter(t => {\n    const transactionDate = new Date(t.date);\n    return transactionDate >= startDate && transactionDate <= endDate;\n  });\n};\n\nexport const groupTransactionsByCategory = (transactions: Transaction[]) => {\n  const grouped: Record<string, number> = {};\n  \n  transactions.forEach(t => {\n    if (!grouped[t.category]) {\n      grouped[t.category] = 0;\n    }\n    grouped[t.category] += t.amount;\n  });\n\n  return Object.entries(grouped).map(([name, value]) => ({\n    name,\n    value\n  }));\n};\n\nexport const getMonthlyData = (transactions: Transaction[]) => {\n  const monthlyData: Record<string, { income: number; expenses: number }> = {};\n  \n  transactions.forEach(t => {\n    const month = new Date(t.date).toLocaleDateString('en-US', { \n      year: 'numeric', \n      month: 'short' \n    });\n    \n    if (!monthlyData[month]) {\n      monthlyData[month] = { income: 0, expenses: 0 };\n    }\n    \n    if (t.type === 'income') {\n      monthlyData[month].income += t.amount;\n    } else {\n      monthlyData[month].expenses += t.amount;\n    }\n  });\n\n  return Object.entries(monthlyData).map(([month, data]) => ({\n    month,\n    income: data.income,\n    expenses: data.expenses,\n    profit: data.income - data.expenses\n  }));\n};\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,4BAA4B,CAAC;IACxC,MAAM,cAAc,aACjB,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,UACvB,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,MAAM,EAAE;IAEtC,MAAM,gBAAgB,aACnB,MAAM,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,WACvB,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,MAAM,EAAE;IAEtC,MAAM,YAAY,cAAc;IAChC,MAAM,eAAe,cAAc,IAAI,AAAC,YAAY,cAAe,MAAM;IAEzE,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;AAEO,MAAM,2BAA2B,CACtC,cACA,WACA;IAEA,OAAO,aAAa,MAAM,CAAC,CAAA;QACzB,MAAM,kBAAkB,IAAI,KAAK,EAAE,IAAI;QACvC,OAAO,mBAAmB,aAAa,mBAAmB;IAC5D;AACF;AAEO,MAAM,8BAA8B,CAAC;IAC1C,MAAM,UAAkC,CAAC;IAEzC,aAAa,OAAO,CAAC,CAAA;QACnB,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE;YACxB,OAAO,CAAC,EAAE,QAAQ,CAAC,GAAG;QACxB;QACA,OAAO,CAAC,EAAE,QAAQ,CAAC,IAAI,EAAE,MAAM;IACjC;IAEA,OAAO,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,MAAM,MAAM,GAAK,CAAC;YACrD;YACA;QACF,CAAC;AACH;AAEO,MAAM,iBAAiB,CAAC;IAC7B,MAAM,cAAoE,CAAC;IAE3E,aAAa,OAAO,CAAC,CAAA;QACnB,MAAM,QAAQ,IAAI,KAAK,EAAE,IAAI,EAAE,kBAAkB,CAAC,SAAS;YACzD,MAAM;YACN,OAAO;QACT;QAEA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACvB,WAAW,CAAC,MAAM,GAAG;gBAAE,QAAQ;gBAAG,UAAU;YAAE;QAChD;QAEA,IAAI,EAAE,IAAI,KAAK,UAAU;YACvB,WAAW,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,MAAM;QACvC,OAAO;YACL,WAAW,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,MAAM;QACzC;IACF;IAEA,OAAO,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,OAAO,KAAK,GAAK,CAAC;YACzD;YACA,QAAQ,KAAK,MAAM;YACnB,UAAU,KAAK,QAAQ;YACvB,QAAQ,KAAK,MAAM,GAAG,KAAK,QAAQ;QACrC,CAAC;AACH","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/FinanceContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { Transaction, Category, FinancialSummary } from '@/types/finance';\nimport { storage } from '@/lib/storage';\nimport { calculateFinancialSummary } from '@/lib/calculations';\n\ninterface FinanceState {\n  transactions: Transaction[];\n  categories: Category[];\n  summary: FinancialSummary;\n}\n\ntype FinanceAction =\n  | { type: 'SET_TRANSACTIONS'; payload: Transaction[] }\n  | { type: 'ADD_TRANSACTION'; payload: Transaction }\n  | { type: 'UPDATE_TRANSACTION'; payload: { id: string; data: Partial<Transaction> } }\n  | { type: 'DELETE_TRANSACTION'; payload: string }\n  | { type: 'SET_CATEGORIES'; payload: Category[] }\n  | { type: 'ADD_CATEGORY'; payload: Category }\n  | { type: 'UPDATE_CATEGORY'; payload: { id: string; data: Partial<Category> } }\n  | { type: 'DELETE_CATEGORY'; payload: string };\n\nconst initialState: FinanceState = {\n  transactions: [],\n  categories: [],\n  summary: {\n    totalIncome: 0,\n    totalExpenses: 0,\n    netProfit: 0,\n    profitMargin: 0,\n  },\n};\n\nconst FinanceContext = createContext<{\n  state: FinanceState;\n  dispatch: React.Dispatch<FinanceAction>;\n} | null>(null);\n\nfunction financeReducer(state: FinanceState, action: FinanceAction): FinanceState {\n  switch (action.type) {\n    case 'SET_TRANSACTIONS': {\n      const transactions = action.payload;\n      const summary = calculateFinancialSummary(transactions);\n      return { ...state, transactions, summary };\n    }\n    case 'ADD_TRANSACTION': {\n      const transactions = [action.payload, ...state.transactions];\n      const summary = calculateFinancialSummary(transactions);\n      storage.addTransaction(action.payload);\n      return { ...state, transactions, summary };\n    }\n    case 'UPDATE_TRANSACTION': {\n      const transactions = state.transactions.map(t =>\n        t.id === action.payload.id ? { ...t, ...action.payload.data } : t\n      );\n      const summary = calculateFinancialSummary(transactions);\n      storage.updateTransaction(action.payload.id, action.payload.data);\n      return { ...state, transactions, summary };\n    }\n    case 'DELETE_TRANSACTION': {\n      const transactions = state.transactions.filter(t => t.id !== action.payload);\n      const summary = calculateFinancialSummary(transactions);\n      storage.deleteTransaction(action.payload);\n      return { ...state, transactions, summary };\n    }\n    case 'SET_CATEGORIES':\n      return { ...state, categories: action.payload };\n    case 'ADD_CATEGORY': {\n      const categories = [...state.categories, action.payload];\n      storage.saveCategories(categories);\n      return { ...state, categories };\n    }\n    case 'UPDATE_CATEGORY': {\n      const categories = state.categories.map(c =>\n        c.id === action.payload.id ? { ...c, ...action.payload.data } : c\n      );\n      storage.saveCategories(categories);\n      return { ...state, categories };\n    }\n    case 'DELETE_CATEGORY': {\n      const categories = state.categories.filter(c => c.id !== action.payload);\n      storage.saveCategories(categories);\n      return { ...state, categories };\n    }\n    default:\n      return state;\n  }\n}\n\nexport function FinanceProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(financeReducer, initialState);\n\n  useEffect(() => {\n    // Load data from localStorage on mount\n    const transactions = storage.getTransactions();\n    const categories = storage.getCategories();\n    \n    dispatch({ type: 'SET_TRANSACTIONS', payload: transactions });\n    dispatch({ type: 'SET_CATEGORIES', payload: categories });\n  }, []);\n\n  return (\n    <FinanceContext.Provider value={{ state, dispatch }}>\n      {children}\n    </FinanceContext.Provider>\n  );\n}\n\nexport function useFinance() {\n  const context = useContext(FinanceContext);\n  if (!context) {\n    throw new Error('useFinance must be used within a FinanceProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}